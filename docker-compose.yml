services:
  # PostgreSQL Database for configurations
  postgres:
    image: postgres:15
    container_name: ${POSTGRES_CONTAINER}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - api-monitor-network

  # Go Backend API
  api-monitor-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${BACKEND_CONTAINER}
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - postgres
    networks:
      - api-monitor-network
    restart: unless-stopped

  # Vue.js Frontend
  api-monitor-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ${FRONTEND_CONTAINER}
    networks:
      - api-monitor-network

  # Nginx Reverse Proxy with SSL
  nginx-proxy:
    image: nginx:latest
    container_name: ${NGINX_CONTAINER}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api-monitor-frontend
      - api-monitor-backend
    networks:
      - api-monitor-network
    restart: unless-stopped

volumes:
  postgres_data:
networks:
  api-monitor-network:
    driver: bridge
