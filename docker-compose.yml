version: '3.8'

services:
  # PostgreSQL Database for configurations
  postgres:
    image: postgres:15
    container_name: api-monitor-postgres
    environment:
      POSTGRES_DB: api_monitor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - api-monitor-network

  # Prometheus for metrics storage
  prometheus:
    image: prom/prometheus:latest
    container_name: api-monitor-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - api-monitor-network

  # Go Backend API
  api-monitor-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api-monitor-backend
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=api_monitor
      - PROMETHEUS_URL=http://prometheus:9090
    depends_on:
      - postgres
      - prometheus
    networks:
      - api-monitor-network
    restart: unless-stopped

  # Vue.js Frontend
  api-monitor-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: api-monitor-frontend
    ports:
      - "8081:80"
    depends_on:
      - api-monitor-backend
    networks:
      - api-monitor-network

volumes:
  postgres_data:
  prometheus_data:

networks:
  api-monitor-network:
    driver: bridge
